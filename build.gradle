plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.devueda'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    compileOnly 'org.projectlombok:lombok:1.18.26'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

compileJava {
    options.compilerArgs = [
            '-Amapstruct.defaultComponentModel=spring', // Optional: use the Spring component model
            '-Amapstruct.suppressGeneratorTimestamp=true', // Optional: suppress the generator timestamp in the generated code
            '-Amapstruct.suppressGeneratorVersionInfoComment=true' // Optional: suppress the generator version info in the generated code
    ]
    options.encoding = 'UTF-8'
    options.compilerArgs += ['-parameters'] // Optional: enable storing method parameter names in the compiled classes
}


tasks.named('test') {
    useJUnitPlatform()
}
